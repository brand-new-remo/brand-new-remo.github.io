import{_ as p,c as t,o as n,a as e}from"./app-B648j0XI.js";const o={},N=e('<h1 id="cdn加速" tabindex="-1"><a class="header-anchor" href="#cdn加速"><span>CDN加速</span></a></h1><p>CDN（Content Delivery Network，内容分发网络）的加速原理主要基于两个核心技术：边缘计算（Edge Computing）和缓存技术。</p><ol><li><strong>边缘计算</strong>：CDN 会在全球各地部署大量的边缘节点，当用户请求某个资源时，CDN 会将请求路由到离用户最近的边缘节点。这样可以减少网络传输的距离和延迟，提高数据传输的速度。</li><li><strong>缓存技术</strong>：CDN 的边缘节点会缓存源服务器的内容。当用户请求某个资源时，如果边缘节点已经缓存了这个资源，就可以直接从缓存中获取，而不需要从源服务器获取。这样可以减少对源服务器的负载，提高资源获取的速度。</li></ol><p>通过这两个核心技术，CDN 可以将内容快速、稳定地分发给全球的用户，从而实现加速效果。</p><p><strong>CDN加速原理</strong></p><p>当用户访问使用CDN服务的网站时，本地DNS服务器通过CNAME方式将最终域名请求重定向到CDN服务。CDN通过一组预先定义好的策略(如内容类型、地理区域、网络负载状况等)，将当时能够最快响应用户的CDN节点IP地址提供给用户，使用户可以以最快的速度获得网站内容。使用CDN后的HTTP请求处理流程如下：</p><p><strong>CDN节点有缓存场景</strong></p><p>HTTP请求流程说明：</p><p>1、用户在浏览器输入要访问的网站域名，向本地DNS发起域名解析请求。</p><p>2、域名解析的请求被发往网站授权DNS服务器。</p><p>3、网站DNS服务器解析发现域名已经CNAME到了www.example.com.c.cdnhwc1.com。</p><p>4、请求被指向CDN服务。</p><p>5、CDN对域名进行智能解析，将响应速度最快的CDN节点IP地址返回给本地DNS。</p><p>6、用户获取响应速度最快的CDN节点IP地址。</p><p>7、浏览器在得到速度最快节点的IP地址以后，向CDN节点发出访问请求。</p><p>8、CDN节点将用户所需资源返回给用户。</p><p><strong>CDN节点无缓存场景</strong></p><p>HTTP请求流程说明：</p><p>1、用户在浏览器输入要访问的网站域名，向本地DNS发起域名解析请求。</p><p>2、域名解析的请求被发往网站授权DNS服务器。</p><p>3、网站DNS服务器解析发现域名已经CNAME到了www.example.com.c.cdnhwc1.com。</p><p>4、请求被指向CDN服务。</p><p>5、CDN对域名进行智能解析，将响应速度最快的CDN节点IP地址返回给本地DNS。</p><p>6、用户获取响应速度最快的CDN节点IP地址。</p><p>7、浏览器在得到速度最快节点的IP地址以后，向CDN节点发出访问请求。</p><p>8、CDN节点回源站拉取用户所需资源。</p><p>9、将回源拉取的资源缓存至节点。</p><p>10、将用户所需资源返回给用户。</p>',28),D=[N];function r(C,s){return n(),t("div",null,D)}const c=p(o,[["render",r],["__file","CDN.html.vue"]]),i=JSON.parse('{"path":"/posts/network/CDN.html","title":"CDN加速","lang":"zh-CN","frontmatter":{"date":"2024-06-03T00:00:00.000Z","category":["网络"],"tag":["CDN"]},"headers":[],"git":{"updatedTime":1717405929000,"contributors":[{"name":"gangqiang duan","email":"duangangqiang@users.noreply.github.com","commits":2}]},"filePathRelative":"posts/network/CDN.md","excerpt":"\\n<p>CDN（Content Delivery Network，内容分发网络）的加速原理主要基于两个核心技术：边缘计算（Edge Computing）和缓存技术。</p>\\n<ol>\\n<li><strong>边缘计算</strong>：CDN 会在全球各地部署大量的边缘节点，当用户请求某个资源时，CDN 会将请求路由到离用户最近的边缘节点。这样可以减少网络传输的距离和延迟，提高数据传输的速度。</li>\\n<li><strong>缓存技术</strong>：CDN 的边缘节点会缓存源服务器的内容。当用户请求某个资源时，如果边缘节点已经缓存了这个资源，就可以直接从缓存中获取，而不需要从源服务器获取。这样可以减少对源服务器的负载，提高资源获取的速度。</li>\\n</ol>"}');export{c as comp,i as data};
